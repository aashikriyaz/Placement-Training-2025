268 .Missing number

class Solution {
    public int missingNumber(int[] nums) 
    {
      int xor1 = 0;
      int xor2 = 0;
      for(int i=0;i<nums.length;i++)
      {
        xor1 = xor1^(i+1);
        xor2 = xor2^nums[i];
      }
      int miss = xor1^xor2;
      return miss;   
    }
}

16.3sum closest

class Solution {
    public int threeSumClosest(int[] nums, int target) 
    {
        Arrays.sort(nums);
        int minDiff= Integer.MAX_VALUE;
        int closestSum = Integer.MAX_VALUE;
        for(int i=0;i<nums.length-2;i++)
        {
            int left = i+1;
            int right = nums.length-1;
            while(left<right)
            {
                int sum = nums[i] + nums[left] + nums[right];
                int diff = Math.abs(sum-target);
                if(diff<minDiff)
                {
                    minDiff = diff;
                    closestSum = sum;
                }
                if(sum<target)
                {
                    left++;
                }
                else
                {
                    right--;
                }
            }
        }
        return closestSum;
    }
}
