263. Ugly Number (easy)

public class Solution {
    public boolean isUgly(int n) {
        if (n <= 0) return false;
        while (n % 2 == 0) n /= 2;
        while (n % 3 == 0) n /= 3;
        while (n % 5 == 0) n /= 5;
        return n == 1;
    }
}



109. Convert Sorted List to Binary Search Tree (medium)

class Solution {
    public TreeNode sortedListToBST(ListNode head) 
    {
        if (head == null) return null;
        return buildBST(head, null);
    }
    private TreeNode buildBST(ListNode head, ListNode tail) 
    {
        if (head == tail) return null;
        ListNode slow = head, fast = head;
        while (fast != tail && fast.next != tail) 
        {
            slow = slow.next;
            fast = fast.next.next;
        }
        TreeNode root = new TreeNode(slow.val);
        root.left = buildBST(head, slow);
        root.right = buildBST(slow.next, tail);
        return root;
    }
}
