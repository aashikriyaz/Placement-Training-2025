231 . Power of two (java)
leetcode sum

class Solution {
    public boolean isPowerOfTwo(int n) {
        return n > 0 && (n & (n - 1)) == 0;
    }
}


7. Reverse integer(java)
class Solution {
    public int reverse(int x) {
        long rev=0;
        while(x!=0){
        rev = rev * 10 + x%10;

        if (rev > Integer.MAX_VALUE || rev < Integer.MIN_VALUE)
            return 0;

        x /= 10;
        }
    return (int) rev;
        } 
    }


23.Merge k sort list
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> pq=new PriorityQueue<>((a,b)->a.val-b.val);
        for(ListNode node:lists){
        if(node!=null) pq.offer(node);
    }
    ListNode head = new ListNode(), temp= head;
    while(!pq.isEmpty()){
        ListNode node = pq.poll();
        temp.next = node;
        temp = temp.next;
        if(node.next!=null) pq.offer(node.next);
    }
        return head.next;
    }

}
